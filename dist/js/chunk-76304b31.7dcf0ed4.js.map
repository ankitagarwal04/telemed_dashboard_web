{"version":3,"sources":["webpack:///./node_modules/chartist-plugin-tooltips-updated/dist/chartist-plugin-tooltip.js","webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/components/dashboard/CommonStats.js"],"names":["undefined","root","window","a0","factory","this","Chartist","document","defaultOptions","currency","currencyFormatCallback","tooltipOffset","x","y","anchorToPoint","appendToBody","class","pointClass","hasClass","element","className","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","offsetParent","elem","parent","body","parentElement","parentNode","getComputedStyle","position","tagName","plugins","tooltip","options","extend","chart","tooltipSelector","Bar","Pie","donut","donutSolid","$toolTip","$chart","container","$toolTipIsShown","$tooltipOffsetParent","querySelector","createElement","appendChild","height","offsetHeight","width","offsetWidth","on","event","selector","callback","addEventListener","e","target","setPosition","offsetX","offsetY","anchor","x2","y2","box","getBoundingClientRect","left","baseVal","value","pageXOffset","top","pageYOffset","style","pageX","pageY","offsetBox","allOffsetLeft","allOffsetTop","show","hide","regex","RegExp","replace","trim","$point","tooltipText","isPieChart","seriesName","meta","hasMeta","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","innerHTML","label","display","breakpoints","ALIGNMENT","makeProps","props","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","val","breakpoint","prop","cache","name","functional","tag","dense","noGutters","render","children","cacheKey","String","classList","h","data","staticClass","_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","watch","selectedMerchants","newSelectedMerchants","merchantFilterSubText","updateFilterSubText","cscMerchants","selectedMerchantsData","forEach","merchant","includes","id","push","length","Promise","resolve","reject","resetSpecialities","then","response","getMappedSpecialitiesFromMerchants","selectedSpecialities","newselectedSpecialities","specialityFilterSubText","specialities","created","getConsultationStats","getCscMerchants","updateDatePickerFields","getDoctorAvailableStats","methods","$http","post","consultation_filters","merchant_ids","mapped_speciality_ids","date_from","datePicker","dateOne","date_to","dateTwo","consultationStats","callDurationStats","call_duration_stats","stats","consultation_stats","groupped_by_day","handleChartData","groupped_by_month","minCallDuration","min_call_duration","avgCallDuration","avg_call_duration","maxCallDuration","max_call_duration","totalCallDuration","total_call_duration","totalVideoConsultations","total_video_consultations","catch","error","console","log","specialityFilterValue","merchantResponse","allMappedSpecialities","allMappedSpecialitiesIds","mappedSpecialities","mapped_specialities","mappedSpeciality","mappedSpecialityId","setSpecialities","mappedSpecialitiesIds","selectedSpecialityId","get","merchantFilterValue","operationOn","newSelectedFilters","filterDataItems","filterSubtext","selectedFilterNames","selectedFilterId","index","item","join","getUpdatedFilterSubText","closeFilterListDialog","filterName","merchantFilterTitle","merchantListDialog","specialityFilterTitle","specialitiesListDialog","statesFilterTitle","stateListDialog","districtsFilterTitle","districtListDialog","formatDates","formattedDates","format","dateFormat","subText","resetDates","d","Date","date","getDate","month","getMonth","year","getFullYear","endDate","doctor_profile_filters","handleDoctorAvailableStatsResponse","approved_doctor_profiles","doctorStats","approvedCount","count","groupped_by_week","fetchChartData","chartData","chartDataLabels","keys","chartDataSeries","values","chartDataOptionHigh","Math","max","whoseStats","grouppingInterval","grouppedData","specifiedIntervalData","grouppedByWeek","labels","series","high","grouppedByMonth","grouppedByDay","getSubStats","subStats","title","successful_count","color","icon","unsuccessful_count","getStatsCardIconBgColor","section","selectedFilters","chosenFilters","split"],"mappings":"qGAAA,4BACeA,IAATC,QAAiCD,IAAXE,SAAsBD,EAAOC,QAGrD,EAAO,CAAC,WAAa,EAAF,SAAYC,GAC7B,OAAQF,EAAK,4BAA8BG,EAAQD,IACpD,sCANL,CAeEE,MAAM,SAAUC,GAuRlB,OAhRC,SAAUJ,EAAQK,EAAUD,GAC3B,aAEA,IAAIE,EAAiB,CACnBC,cAAUT,EACVU,4BAAwBV,EACxBW,cAAe,CACbC,EAAG,EACHC,GAAI,IAENC,eAAe,EACfC,cAAc,EACdC,WAAOhB,EACPiB,WAAY,YA+Md,SAASC,EAASC,EAASC,GACzB,OAAQ,IAAMD,EAAQE,aAAa,SAAW,KAAKC,QAAQ,IAAMF,EAAY,MAAQ,EAGvF,SAASG,EAAKJ,EAASC,GACrB,GACED,EAAUA,EAAQK,kBACXL,IAAYD,EAASC,EAASC,IACvC,OAAOD,EAQT,SAASM,EAAKN,GACZ,OAAOA,EAAQO,WAAaP,EAAQQ,YAOtC,SAASC,EAAaC,GACpB,GAAID,KAAgBC,EAAM,CAExB,IAAIC,EAASD,EAAKD,aAMlB,OAJKE,IACHA,EAASvB,EAASwB,KAAKC,eAGlBF,EAGLA,EAASD,EAAKI,WAClB,OAAKH,EAI4C,WAA7C5B,EAAOgC,iBAAiBJ,GAAQK,SAC3BL,EACqB,SAAnBA,EAAOM,QACTN,EAAOE,cAEPJ,EAAaE,GARbvB,EAASwB,KAAKC,cAlPzB1B,EAAS+B,QAAU/B,EAAS+B,SAAW,GACvC/B,EAAS+B,QAAQC,QAAU,SAAUC,GAGnC,OAFAA,EAAUjC,EAASkC,OAAO,GAAIhC,EAAgB+B,GAEvC,SAAiBE,GAEtB,IAAIC,EAAkBH,EAAQtB,WAC1BwB,aAAiBnC,EAASqC,IAC5BD,EAAkB,SACTD,aAAiBnC,EAASsC,MAIjCF,EAFED,EAAMF,QAAQM,MAEEJ,EAAMF,QAAQO,WAAa,uBAAyB,iBAEpD,gBAItB,IAGIC,EAHAC,EAASP,EAAMQ,UACfC,GAAkB,EAClBC,EAAuBvB,EAAaoB,GAQtCD,EALGR,EAAQxB,aAKAR,EAAS6C,cAAc,qBAHvBJ,EAAOI,cAAc,qBAK7BL,IACHA,EAAWxC,EAAS8C,cAAc,OAClCN,EAAS3B,UAAcmB,EAAQvB,MAA8B,oBAAsBuB,EAAQvB,MAAnD,mBACnCuB,EAAQxB,aAGXR,EAASwB,KAAKuB,YAAYP,GAF1BC,EAAOM,YAAYP,IAKvB,IAAIQ,EAASR,EAASS,aAClBC,EAAQV,EAASW,YAIrB,SAASC,EAAGC,EAAOC,EAAUC,GAC3Bd,EAAOe,iBAAiBH,GAAO,SAAUI,GAClCH,IAAY3C,EAAS8C,EAAEC,OAAQJ,IAClCC,EAASE,MAuFf,SAASE,EAAYN,GACnBL,EAASA,GAAUR,EAASS,aAC5BC,EAAQA,GAASV,EAASW,YAC1B,IAAIS,GAAWV,EAAQ,EAAIlB,EAAQ5B,cAAcC,EAC7CwD,GAAWb,EAAShB,EAAQ5B,cAAcE,EAE1CwD,GAAmC,IAA1B9B,EAAQzB,eAA0B8C,EAAMK,OAAOK,IAAMV,EAAMK,OAAOM,GAE/E,IAA6B,IAAzBhC,EAAQxB,aACV,GAAIsD,EAAQ,CACV,IAAIG,EAAMxB,EAAOyB,wBACbC,EAAOd,EAAMK,OAAOK,GAAGK,QAAQC,MAAQJ,EAAIE,KAAOxE,EAAO2E,YACzDC,EAAMlB,EAAMK,OAAOM,GAAGI,QAAQC,MAAQJ,EAAIM,IAAM5E,EAAO6E,YAE3DhC,EAASiC,MAAMN,KAAOA,EAAOP,EAAU,KACvCpB,EAASiC,MAAMF,IAAMA,EAAMV,EAAU,UAErCrB,EAASiC,MAAMN,KAAOd,EAAMqB,MAAQd,EAAU,KAC9CpB,EAASiC,MAAMF,IAAMlB,EAAMsB,MAAQd,EAAU,SAE1C,CACL,IAAIe,EAAYhC,EAAqBsB,wBACjCW,GAAiBD,EAAUT,KAAOxE,EAAO2E,YAAcV,EACvDkB,GAAgBF,EAAUL,IAAM5E,EAAO6E,YAAcX,EAEzD,GAAIC,EAAQ,CACNG,EAAMxB,EAAOyB,wBACbC,EAAOd,EAAMK,OAAOK,GAAGK,QAAQC,MAAQJ,EAAIE,KAAOxE,EAAO2E,YACzDC,EAAMlB,EAAMK,OAAOM,GAAGI,QAAQC,MAAQJ,EAAIM,IAAM5E,EAAO6E,YAE3DhC,EAASiC,MAAMN,KAAOA,EAAOU,EAAgB,KAC7CrC,EAASiC,MAAMF,IAAMA,EAAMO,EAAe,UAE1CtC,EAASiC,MAAMN,KAAOd,EAAMqB,MAAQG,EAAgB,KACpDrC,EAASiC,MAAMF,IAAMlB,EAAMsB,MAAQG,EAAe,MASxD,SAASC,EAAKnE,GACZ+B,GAAkB,EACbhC,EAASC,EAAS,kBACrBA,EAAQC,UAAYD,EAAQC,UAAY,iBAQ5C,SAASmE,EAAKpE,GACZ+B,GAAkB,EAClB,IAAIsC,EAAQ,IAAIC,OAAO,mBAAyB,MAChDtE,EAAQC,UAAYD,EAAQC,UAAUsE,QAAQF,EAAO,IAAIG,OA5I3DhC,EAAG,YAAajB,GAAiB,SAAUkB,GACzC,IAAIgC,EAAShC,EAAMK,OACf4B,EAAc,GAEdC,EAAcrD,aAAiBnC,EAASsC,IAAOgD,EAASA,EAAO3D,WAC/D8D,EAAa,EAAeH,EAAO3D,WAAWZ,aAAa,YAAcuE,EAAO3D,WAAWZ,aAAa,kBAAoB,GAC5H2E,EAAOJ,EAAOvE,aAAa,YAAc0E,GAAc,GACvDE,IAAYD,EACZpB,EAAQgB,EAAOvE,aAAa,YAMhC,GAJIkB,EAAQ2D,yBAAsE,oBAApC3D,EAAQ2D,0BACpDtB,EAAQrC,EAAQ2D,wBAAwBtB,IAGtCrC,EAAQ4D,YAA4C,oBAAvB5D,EAAQ4D,WACvCN,EAActD,EAAQ4D,WAAWH,EAAMpB,OAClC,CACL,GAAIrC,EAAQ6D,WAAY,CACtB,IAAIC,EAAM9F,EAAS8C,cAAc,YACjCgD,EAAIC,UAAYN,EAChBA,EAAOK,EAAIzB,MAKb,GAFAoB,EAAO,uCAAyCA,EAAO,UAEnDC,EACFJ,GAAeG,EAAO,YAItB,GAAIvD,aAAiBnC,EAASsC,IAAK,CACjC,IAAI2D,EAAQhF,EAAKqE,EAAQ,YACrBW,IACFV,GAAepE,EAAK8E,GAAS,QAK/B3B,IACErC,EAAQ9B,WAERmE,OADoC5E,GAAlCuC,EAAQ7B,uBACF6B,EAAQ7B,uBAAuBkE,EAAOrC,GAEtCA,EAAQ9B,SAAWmE,EAAMc,QAAQ,+BAAgC,QAG7Ed,EAAQ,wCAA0CA,EAAQ,UAC1DiB,GAAejB,GAIfiB,IACF9C,EAASuD,UAAYT,EAGrBtC,EAASR,EAASS,aAClBC,EAAQV,EAASW,aAEY,IAAzBnB,EAAQxB,eACVoC,EAAuBvB,EAAaoB,IAEP,aAA3BD,EAASiC,MAAMwB,UACjBzD,EAASiC,MAAMwB,QAAU,YAE3BtC,EAAYN,GACZ0B,EAAKvC,GAGLQ,EAASR,EAASS,aAClBC,EAAQV,EAASW,gBAIrBC,EAAG,WAAYjB,GAAiB,WAC9B6C,EAAKxC,MAGPY,EAAG,YAAa,MAAM,SAAUC,IACA,IAA1BrB,EAAQzB,eAA2BoC,GACrCgB,EAAYN,QAnJtB,CA8QE1D,OAAQK,SAAUD,GAEbA,EAAS+B,QAAQC,Y,kPC/RlBmE,EAAc,CAAC,KAAM,KAAM,KAAjC,MAEMC,EAAY,CAAC,QAAS,MAA5B,UAEA,SAASC,EAAT,KACE,OAAOF,EAAA,QAAmB,cAExB,OADAG,EAAMC,EAAS,eAAf,IAAkCC,IAClC,IAFF,IAMF,IAAMC,EAAkB,SAAAC,GAAD,MAAc,6CAArC,IACMC,EAAaN,EAAU,SAAS,iBAAO,CAC3CO,KAD2C,OAE3CC,QAF2C,KAG3CC,UAAWL,MAGPM,EAAoB,SAAAL,GAAD,MAAc,uDAAvC,IACMM,EAAeX,EAAU,WAAW,iBAAO,CAC/CO,KAD+C,OAE/CC,QAF+C,KAG/CC,UAAWC,MAGPE,EAAyB,SAAAP,GAAD,MAAc,iEAA5C,IACMQ,EAAoBb,EAAU,gBAAgB,iBAAO,CACzDO,KADyD,OAEzDC,QAFyD,KAGzDC,UAAWG,MAGPE,EAAU,CACdC,MAAOC,OAAA,KADO,GAEdC,QAASD,OAAA,KAFK,GAGdE,aAAcF,OAAA,SAGVG,EAAW,CACfJ,MADe,QAEfE,QAFe,UAGfC,aAAc,iBAGhB,SAASE,EAAT,OACE,IAAI3G,EAAY0G,EAAhB,GACA,SAAIE,EAAJ,CAGA,KAAU,CAER,IAAMC,EAAaC,EAAA,UAAnB,IACA9G,GAAa,IAAJ,OAAT,GAIF,OADAA,GAAa,IAAJ,OAAT,GACOA,EAAP,eAGF,IAAM+G,EAAQ,IAAd,IAEe,2BAAW,CACxBC,KADwB,QAExBC,YAFwB,EAGxBzB,MAAO,8CACL0B,IAAK,CACHpB,KADG,OAEHC,QAAS,OAEXoB,MALK,QAMLC,UANK,QAOLd,MAAO,CACLR,KADK,OAELC,QAFK,KAGLC,UAAWL,IAVR,GAAF,IAaHa,QAAS,CACPV,KADO,OAEPC,QAFO,KAGPC,UAAWC,IAhBR,GAAF,IAmBHQ,aAAc,CACZX,KADY,OAEZC,QAFY,KAGZC,UAAWG,IAEVC,GAELiB,OA7BwB,SA6BlB,EA7BkB,GA6BY,IAAzB,EAAyB,EAAzB,QAAyB,EAAzB,KAAeC,EAAU,EAAVA,SAEpBC,EAAJ,GACA,IAAK,IAAL,OACEA,GAAYC,OAAQhC,EAApB,IAEF,IAAIiC,EAAYV,EAAA,IAAhB,GAyBA,OAvBA,GAAgB,iBAGd,EACA,SAHAU,EADc,GAId,EACEpB,EAAA,YAAsB,SAAAS,GACpB,IAAMtD,EAAiBgC,EAAvB,GACMxF,EAAY2G,EAAgBb,EAAMgB,EAAxC,GACA,GAAeW,EAAA,WAInBA,EAAA,SACE,aAAcjC,EADD,UAEb,aAAcA,EAFD,OAAf,iCAGYA,EAAV,OAA0BA,EAHb,OAAf,mCAIcA,EAAZ,SAA8BA,EAJjB,SAAf,yCAKoBA,EAAlB,cAAyCA,EAAMiB,cALjD,IAQAM,EAAA,SApBc,GAuBTW,EACLlC,EADM,IAEN,eAAUmC,EAAM,CACdC,YADc,MAEdhI,MAAO6H,IAJX,O,oFC/HW,SAASI,EAAmBC,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAOG,eAAiBH,G,sECFnC,SAASI,EAAiBC,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAY9B,OAAO4B,GAAO,OAAOJ,MAAMO,KAAKH,G,gBCD3E,SAASI,IACtB,MAAM,IAAIC,UAAU,wICGP,SAASC,EAAmBX,GACzC,OAAOY,EAAkBZ,IAAQa,EAAgBb,IAAQc,eAA2Bd,IAAQe,M,qLCD/E,QACbC,MAAO,CACLC,kBADK,SACcC,GAAsB,WACvC/J,KAAKgK,sBAAwBhK,KAAKiK,oBAAoB,WAAYF,EAAsB/J,KAAKkK,cAC7F,IAAMC,EAAwB,GAC9BnK,KAAKkK,aAAaE,SAAQ,SAACC,GACrBN,EAAqBO,SAASD,EAASE,KACzCJ,EAAsBK,KAAKH,MAKM,IAAjCF,EAAsBM,OAGxB,IAAIC,SAAQ,SAACC,EAASC,GACpB,EAAKC,oBACLF,EAAQ,OACPG,MAAK,SAAAC,GACN,EAAKC,mCAAmC,EAAKd,iBAG/ClK,KAAKgL,mCAAmCb,IAG5Cc,qBAxBK,SAwBiBC,GACpBlL,KAAKmL,wBAA0BnL,KAAKiK,oBAAoB,aAAciB,EAAyBlL,KAAKoL,gBAGxGC,QA7Ba,WA+BXrL,KAAKsL,uBACLtL,KAAKuL,kBACLvL,KAAKwL,yBACLxL,KAAKyL,2BAEPC,QAAS,CACPJ,qBAAsB,WAAY,WAChCtL,KAAK2L,MAAMC,KAAK,iCAAkC,CAChDC,qBAAsB,CACpBC,aAAc9L,KAAK8J,kBACnBiC,sBAAuB/L,KAAKiL,qBAC5Be,UAAWhM,KAAKiM,WAAWC,QAC3BC,QAASnM,KAAKiM,WAAWG,WAE1BtB,MAAK,SAACC,GACP,IAAMsB,EAAoBtB,EACpBuB,EAAoBD,EAAkBE,oBAC5C,EAAKF,kBAAkBG,MAAQH,EAAkBI,mBAAqBJ,EAAkBI,mBAAqB,GAEzGJ,EAAkBK,iBACpB,EAAKC,gBAAgB,oBAAqB,QAASN,EAAkBK,iBAEnEL,EAAkBO,mBACpB,EAAKD,gBAAgB,oBAAqB,UAAWN,EAAkBO,mBAGzE,EAAKN,kBAAkBO,gBAAkBP,EAAkBQ,kBAC3D,EAAKR,kBAAkBS,gBAAkBT,EAAkBU,kBAC3D,EAAKV,kBAAkBW,gBAAkBX,EAAkBY,kBAC3D,EAAKZ,kBAAkBa,kBAAoBb,EAAkBc,oBAC7D,EAAKd,kBAAkBe,wBAA0Bf,EAAkBgB,0BAC/DhB,EAAkBI,iBACpB,EAAKC,gBAAgB,oBAAqB,QAASL,EAAkBI,iBAEnEJ,EAAkBM,mBACpB,EAAKD,gBAAgB,oBAAqB,UAAWL,EAAkBM,sBAExEW,OAAM,SAACC,GAERC,QAAQC,IAAIF,OAGhB3C,kBAAmB,WACjB7K,KAAKoL,aAAe,GACpBpL,KAAK2N,sBAAwB,EAC7B3N,KAAKiL,qBAAuB,GAC5BjL,KAAKmL,wBAA0B,oBAEjCH,mCAAoC,SAAU4C,GAC5C,GAAIA,EAAiBnD,OAAS,EAAG,CAC/B,IAAMoD,EAAwB,GACxBC,EAA2B,GACjCF,EAAiBxD,SAAQ,SAACC,GACxB,IAAM0D,EAAqB1D,EAAS2D,oBAChCD,EAAmBtD,OAAS,GAC9BsD,EAAmB3D,SAAQ,SAAC6D,GAC1B,IAAMC,EAAqBD,EAAiB1D,GACvCuD,EAAyBxD,SAAS4D,KACrCJ,EAAyBtD,KAAK0D,GAC9BL,EAAsBrD,KAAK,CAAED,GAAI2D,EAAoBnG,KAAMkG,EAAiBlG,cAK5C,IAApC+F,EAAyBrD,OAC3BzK,KAAK6K,oBAEL7K,KAAKmO,gBAAgBN,EAAuBC,QAG9C9N,KAAK6K,qBAGTsD,gBAAiB,SAAUJ,EAAoBK,GAC7C,IAAMlD,EAA0B,GAChClL,KAAKoL,aAAe2C,EACpB/N,KAAK2N,sBAAwB3N,KAAKoL,aAAaX,OAC/CzK,KAAKiL,qBAAqBb,SAAQ,SAACiE,GAC7BD,EAAsB9D,SAAS+D,IACjCnD,EAAwBV,KAAK6D,MAGjCrO,KAAKiL,qBAAuBC,EAC5BlL,KAAKmL,wBAA0BnL,KAAKiK,oBAAoB,aAAcjK,KAAKiL,qBAAsBjL,KAAKoL,eAExGG,gBAAiB,WAAY,WAC3BvL,KAAK2L,MAAM2C,IAAI,kCAAkCxD,MAAK,SAACC,GACrD,EAAKb,aAAea,EACpB,EAAKwD,oBAAsB,EAAKrE,aAAaO,OAC7C,EAAKO,mCAAmCD,MACvCwC,OAAM,SAACC,GAERC,QAAQC,IAAIF,OAGhBvD,oBAAqB,SAAUuE,EAAaC,EAAoBC,GAC9D,IAAIC,EAAgB,GACpB,GAAIF,EAAmBhE,OAAS,EAAG,CACjC,IAAMmE,EAAsB,GAC5BH,EAAmBrE,SAAQ,SAACyE,EAAkBC,GAC5CJ,EAAgBtE,SAAQ,SAAC2E,EAAMD,GACzBC,EAAKxE,KAAOsE,GACdD,EAAoBpE,KAAKuE,EAAKhH,YAIpC4G,EAAgBC,EAAoBI,KAAK,WAEzC,OAAQR,GACN,IAAK,WACHG,EAAgB,gBAChB,MACF,IAAK,aACHA,EAAgB,mBAChB,MACF,QACEA,EAAgB,MAChB,MAIN,OADAA,EAAgB3O,KAAKiP,wBAAwBN,GACtCA,GAETO,sBAAuB,SAAUC,GAC3BA,IAAenP,KAAKoP,qBACtBpP,KAAKqP,oBAAqB,EAC1BrP,KAAKyL,2BACI0D,IAAenP,KAAKsP,uBAC7BtP,KAAKuP,wBAAyB,EAC9BvP,KAAKyL,2BACI0D,IAAenP,KAAKwP,kBAC7BxP,KAAKyP,iBAAkB,EACdN,IAAenP,KAAK0P,uBAC7B1P,KAAK2P,oBAAqB,GAE5B3P,KAAKsL,wBAEPsE,YApIO,SAoIM3D,GAEX,IAAI4D,EAAiB,GACrB7P,KAAKiM,WAAaA,EACdA,EAAWC,UACb2D,EAAiBC,IAAO7D,EAAWC,QAASlM,KAAKiM,WAAW8D,aAE1D9D,EAAWG,UACbyD,GAAkB,MAAQC,IAAO7D,EAAWG,QAASpM,KAAKiM,WAAW8D,aAGvE/P,KAAKiM,WAAW+D,QAAUH,EAC1B7P,KAAKsL,wBAEP2E,WAlJO,WAmJLjQ,KAAKiM,WAAWC,QAAU,GAC1BlM,KAAKiM,WAAWG,QAAU,GAC1BpM,KAAKiM,WAAW+D,QAAU,GAC1BhQ,KAAKsL,wBAEPE,uBAxJO,WAyJL,IAAM0E,EAAI,IAAIC,KACRC,EAAOF,EAAEG,UACTC,EAAQJ,EAAEK,WACVC,EAAON,EAAEO,cAGfzQ,KAAKiM,WAAWyE,QAAUF,EAAO,KAAOF,EAAQ,GAAK,KAAOF,EAAO,IAErE3E,wBAAyB,WAAY,WACnCzL,KAAK2L,MAAMC,KAAK,yBAA0B,CACxC+E,uBAAwB,CACtB7E,aAAc9L,KAAK8J,kBACnBiC,sBAAuB/L,KAAKiL,wBAE7BH,MAAK,SAACC,GACP,EAAK6F,mCAAmC7F,MACvCwC,OAAM,SAACC,GAERC,QAAQC,IAAIF,OAGhBoD,mCAAoC,SAAU7F,GACxCA,EAAS8F,2BACX7Q,KAAK8Q,YAAYC,cAAgBhG,EAAS8F,yBAAyBG,OAEjEjG,EAASkG,kBACXjR,KAAK2M,gBAAgB,cAAe,SAAU5B,EAASkG,kBAErDlG,EAAS6B,mBACX5M,KAAK2M,gBAAgB,cAAe,UAAW5B,EAAS6B,oBAG5DsE,eAAgB,SAAUC,GACxB,IAAMC,EAAkB9J,OAAO+J,KAAKF,GAC9BG,EAAkB,CAAChK,OAAOiK,OAAOJ,IACnCK,EAAsB,EAK1B,OAJAA,EAAuBC,KAAKC,IAAL,MAAAD,KAAI,eAAQH,EAAgB,KAAMG,KAAKC,IAAL,MAAAD,KAAI,eAAQH,EAAgB,KAAM,EAC/D,IAAxBE,IACFA,EAAsB,KAEjB,CAACJ,EAAiBE,EAAiBE,IAE5C7E,gBAAiB,SAAUgF,EAAYC,EAAmBC,GACxD,IAAMC,EAAwB9R,KAAKkR,eAAeW,GAC/B,gBAAfF,EACwB,WAAtBC,GACF5R,KAAK8Q,YAAYiB,eAAerJ,KAAKsJ,OAASF,EAAsB,GACpE9R,KAAK8Q,YAAYiB,eAAerJ,KAAKuJ,OAASH,EAAsB,GACpE9R,KAAK8Q,YAAYiB,eAAe7P,QAAQgQ,KAAOJ,EAAsB,IACtC,YAAtBF,IACT5R,KAAK8Q,YAAYqB,gBAAgBzJ,KAAKsJ,OAASF,EAAsB,GACrE9R,KAAK8Q,YAAYqB,gBAAgBzJ,KAAKuJ,OAASH,EAAsB,GACrE9R,KAAK8Q,YAAYqB,gBAAgBjQ,QAAQgQ,KAAOJ,EAAsB,IAEhD,sBAAfH,EACiB,UAAtBC,GACF5R,KAAKqM,kBAAkB+F,cAAc1J,KAAKsJ,OAASF,EAAsB,GACzE9R,KAAKqM,kBAAkB+F,cAAc1J,KAAKuJ,OAASH,EAAsB,GACzE9R,KAAKqM,kBAAkB+F,cAAclQ,QAAQgQ,KAAOJ,EAAsB,IAC3C,YAAtBF,IACT5R,KAAKqM,kBAAkB8F,gBAAgBzJ,KAAKsJ,OAASF,EAAsB,GAC3E9R,KAAKqM,kBAAkB8F,gBAAgBzJ,KAAKuJ,OAASH,EAAsB,GAC3E9R,KAAKqM,kBAAkB8F,gBAAgBjQ,QAAQgQ,KAAOJ,EAAsB,IAEtD,sBAAfH,IACiB,UAAtBC,GACF5R,KAAKsM,kBAAkB8F,cAAc1J,KAAKsJ,OAASF,EAAsB,GACzE9R,KAAKsM,kBAAkB8F,cAAc1J,KAAKuJ,OAASH,EAAsB,GACzE9R,KAAKsM,kBAAkB8F,cAAclQ,QAAQgQ,KAAOJ,EAAsB,IAC3C,YAAtBF,IACT5R,KAAKsM,kBAAkB6F,gBAAgBzJ,KAAKsJ,OAASF,EAAsB,GAC3E9R,KAAKsM,kBAAkB6F,gBAAgBzJ,KAAKuJ,OAASH,EAAsB,GAC3E9R,KAAKsM,kBAAkB6F,gBAAgBjQ,QAAQgQ,KAAOJ,EAAsB,MAIlFO,YAAa,SAAUV,GACrB,IAAIW,EAAW,GAkCf,MAjCmB,iBAAfX,EACE3R,KAAKqM,kBAAkBG,QACzB8F,EAAW,CACT,CACEC,MAAO,UACPvB,MAAOhR,KAAKqM,kBAAkBG,MAAMgG,iBACpCC,MAAO,UACPC,KAAM,CAAC,MAAO,aAEhB,CACEH,MAAO,SACPvB,MAAOhR,KAAKqM,kBAAkBG,MAAMmG,mBACpCF,MAAO,UACPC,KAAM,CAAC,MAAO,iBAII,kBAAff,GACL3R,KAAKsM,oBACPgG,EAAW,CACT,CACEC,MAAO,UACPvB,MAAOhR,KAAKsM,kBAAkBS,gBAC9B0F,MAAO,WAET,CACEF,MAAO,QACPvB,MAAOhR,KAAKsM,kBAAkBe,wBAC9BoF,MAAO,aAKRH,GAETM,wBAAyB,SAAUC,GACjC,IAAIJ,EACJ,OAAQI,GACN,IAAK,SACHJ,EAAQ,UACR,MACF,IAAK,QACHA,EAAQ,UACR,MACF,IAAK,QACHA,EAAQ,cACR,MAEJ,OAAOA,GAETxD,wBAAyB,SAAU6D,GACjC,IACInE,EADEoE,EAAgBD,EAAgBE,MAAM,KAO5C,OAJErE,EADEoE,EAActI,QAAU,EACVsI,EAAc,GAAK,KAAOA,EAAc,GAAK,MAA7C,UAAwDA,EAActI,OAAS,GAAM,OAErFqI,EAEXnE","file":"js/chunk-76304b31.7dcf0ed4.js","sourcesContent":["(function (root, factory) {\r\n  if (root === undefined && window !== undefined) root = window;\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module unless amdModuleId is set\r\n    define([\"chartist\"], function (a0) {\r\n      return (root['Chartist.plugins.tooltip'] = factory(a0));\r\n    });\r\n  } else if (typeof module === 'object' && module.exports) {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory(require(\"chartist\"));\r\n  } else {\r\n    root['Chartist.plugins.tooltip'] = factory(root[\"Chartist\"]);\r\n  }\r\n}(this, function (Chartist) {\r\n\r\n/**\r\n * Chartist.js plugin to display a data label on top of the points in a line chart.\r\n *\r\n */\r\n/* global Chartist */\r\n(function (window, document, Chartist) {\r\n  'use strict';\r\n\r\n  var defaultOptions = {\r\n    currency: undefined,\r\n    currencyFormatCallback: undefined,\r\n    tooltipOffset: {\r\n      x: 0,\r\n      y: -20,\r\n    },\r\n    anchorToPoint: false,\r\n    appendToBody: true,\r\n    class: undefined,\r\n    pointClass: 'ct-point',\r\n  };\r\n\r\n  Chartist.plugins = Chartist.plugins || {};\r\n  Chartist.plugins.tooltip = function (options) {\r\n    options = Chartist.extend({}, defaultOptions, options);\r\n\r\n    return function tooltip(chart) {\r\n      // Warning: If you are using npm link or yarn link, these instanceof checks will fail and you won't any tooltips\r\n      var tooltipSelector = options.pointClass;\r\n      if (chart instanceof Chartist.Bar) {\r\n        tooltipSelector = 'ct-bar';\r\n      } else if (chart instanceof Chartist.Pie) {\r\n        // Added support for donut graph\r\n        if (chart.options.donut) {\r\n          // Added support for the solid donut graph\r\n          tooltipSelector = chart.options.donutSolid ? 'ct-slice-donut-solid' : 'ct-slice-donut';\r\n        } else {\r\n          tooltipSelector = 'ct-slice-pie';\r\n        }\r\n      }\r\n\r\n      var $chart = chart.container;\r\n      var $toolTipIsShown = false;\r\n      var $tooltipOffsetParent = offsetParent($chart);\r\n      var $toolTip;\r\n\r\n      if (!options.appendToBody) {\r\n        // searching for existing tooltip in the chart, because appendToBody is disabled\r\n        $toolTip = $chart.querySelector('.chartist-tooltip');\r\n      } else {\r\n        // searching for existing tooltip in the body, because appendToBody is enabled\r\n        $toolTip = document.querySelector('.chartist-tooltip');\r\n      }\r\n      if (!$toolTip) {\r\n        $toolTip = document.createElement('div');\r\n        $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\r\n        if (!options.appendToBody) {\r\n          $chart.appendChild($toolTip);\r\n        } else {\r\n          document.body.appendChild($toolTip);\r\n        }\r\n      }\r\n      var height = $toolTip.offsetHeight;\r\n      var width = $toolTip.offsetWidth;\r\n\r\n      // hide($toolTip);\r\n\r\n      function on(event, selector, callback) {\r\n        $chart.addEventListener(event, function (e) {\r\n          if (!selector || hasClass(e.target, selector))\r\n            callback(e);\r\n        });\r\n      }\r\n\r\n      on('mouseover', tooltipSelector, function (event) {\r\n        var $point = event.target;\r\n        var tooltipText = '';\r\n\r\n        var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\r\n        var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\r\n        var meta = $point.getAttribute('ct:meta') || seriesName || '';\r\n        var hasMeta = !!meta;\r\n        var value = $point.getAttribute('ct:value');\r\n\r\n        if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\r\n          value = options.transformTooltipTextFnc(value);\r\n        }\r\n\r\n        if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\r\n          tooltipText = options.tooltipFnc(meta, value);\r\n        } else {\r\n          if (options.metaIsHTML) {\r\n            var txt = document.createElement('textarea');\r\n            txt.innerHTML = meta;\r\n            meta = txt.value;\r\n          }\r\n\r\n          meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\r\n\r\n          if (hasMeta) {\r\n            tooltipText += meta + '<br>';\r\n          } else {\r\n            // For Pie Charts also take the labels into account\r\n            // Could add support for more charts here as well!\r\n            if (chart instanceof Chartist.Pie) {\r\n              var label = next($point, 'ct-label');\r\n              if (label) {\r\n                tooltipText += text(label) + '<br>';\r\n              }\r\n            }\r\n          }\r\n\r\n          if (value) {\r\n            if (options.currency) {\r\n              if (options.currencyFormatCallback != undefined) {\r\n                value = options.currencyFormatCallback(value, options);\r\n              } else {\r\n                value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\r\n              }\r\n            }\r\n            value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\r\n            tooltipText += value;\r\n          }\r\n        }\r\n\r\n        if (tooltipText) {\r\n          $toolTip.innerHTML = tooltipText;\r\n\r\n          // Calculate new width and height, as toolTip width/height may have changed with innerHTML change\r\n          height = $toolTip.offsetHeight;\r\n          width = $toolTip.offsetWidth;\r\n\r\n          if (options.appendToBody !== true) {\r\n            $tooltipOffsetParent = offsetParent($chart);\r\n          }\r\n          if ($toolTip.style.display !== 'absolute') {\r\n            $toolTip.style.display = 'absolute';\r\n          }\r\n          setPosition(event);\r\n          show($toolTip);\r\n\r\n          // Remember height and width to avoid wrong position in IE\r\n          height = $toolTip.offsetHeight;\r\n          width = $toolTip.offsetWidth;\r\n        }\r\n      });\r\n\r\n      on('mouseout', tooltipSelector, function () {\r\n        hide($toolTip);\r\n      });\r\n\r\n      on('mousemove', null, function (event) {\r\n        if (options.anchorToPoint === false && $toolTipIsShown) {\r\n          setPosition(event);\r\n        }\r\n      });\r\n\r\n      function setPosition(event) {\r\n        height = height || $toolTip.offsetHeight;\r\n        width = width || $toolTip.offsetWidth;\r\n        var offsetX = -width / 2 + options.tooltipOffset.x;\r\n        var offsetY = -height + options.tooltipOffset.y;\r\n\r\n        var anchor = options.anchorToPoint === true && event.target.x2 && event.target.y2;\r\n\r\n        if (options.appendToBody === true) {\r\n          if (anchor) {\r\n            var box = $chart.getBoundingClientRect();\r\n            var left = event.target.x2.baseVal.value + box.left + window.pageXOffset;\r\n            var top = event.target.y2.baseVal.value + box.top + window.pageYOffset;\r\n\r\n            $toolTip.style.left = left + offsetX + 'px';\r\n            $toolTip.style.top = top + offsetY + 'px';\r\n          } else {\r\n            $toolTip.style.left = event.pageX + offsetX + 'px';\r\n            $toolTip.style.top = event.pageY + offsetY + 'px';\r\n          }\r\n        } else {\r\n          var offsetBox = $tooltipOffsetParent.getBoundingClientRect();\r\n          var allOffsetLeft = -offsetBox.left - window.pageXOffset + offsetX;\r\n          var allOffsetTop = -offsetBox.top - window.pageYOffset + offsetY;\r\n\r\n          if (anchor) {\r\n            var box = $chart.getBoundingClientRect();\r\n            var left = event.target.x2.baseVal.value + box.left + window.pageXOffset;\r\n            var top = event.target.y2.baseVal.value + box.top + window.pageYOffset;\r\n\r\n            $toolTip.style.left = left + allOffsetLeft + 'px';\r\n            $toolTip.style.top = top + allOffsetTop + 'px';\r\n          } else {\r\n            $toolTip.style.left = event.pageX + allOffsetLeft + 'px';\r\n            $toolTip.style.top = event.pageY + allOffsetTop + 'px';\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Shows the tooltip element, if not shown\r\n       * @param element\r\n       */\r\n      function show(element) {\r\n        $toolTipIsShown = true;\r\n        if (!hasClass(element, 'tooltip-show')) {\r\n          element.className = element.className + ' tooltip-show';\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Hides the tooltip element\r\n       * @param element\r\n       */\r\n      function hide(element) {\r\n        $toolTipIsShown = false;\r\n        var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\r\n        element.className = element.className.replace(regex, '').trim();\r\n      }\r\n\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Returns whether a element has a css class called className\r\n   * @param element\r\n   * @param className\r\n   * @return {boolean}\r\n   */\r\n  function hasClass(element, className) {\r\n    return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\r\n  }\r\n\r\n  function next(element, className) {\r\n    do {\r\n      element = element.nextSibling;\r\n    } while (element && !hasClass(element, className));\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param element\r\n   * @return {string | string}\r\n   */\r\n  function text(element) {\r\n    return element.innerText || element.textContent;\r\n  }\r\n\r\n  /**\r\n   * Returns the first positioned parent of the element\r\n   * @return HTMLElement\r\n   */\r\n  function offsetParent(elem) {\r\n    if (offsetParent in elem) {\r\n      // Using the native property if possible\r\n      var parent = elem.offsetParent;\r\n\r\n      if (!parent) {\r\n        parent = document.body.parentElement;\r\n      }\r\n\r\n      return parent;\r\n    }\r\n\r\n    var parent = elem.parentNode;\r\n    if (!parent) {\r\n      return document.body.parentElement;\r\n    }\r\n\r\n    if (window.getComputedStyle(parent).position !== 'static') {\r\n      return parent;\r\n    } else if (parent.tagName === 'BODY') {\r\n      return parent.parentElement;\r\n    } else {\r\n      return offsetParent(parent);\r\n    }\r\n  }\r\n\r\n}(window, document, Chartist));\r\n\r\nreturn Chartist.plugins.tooltip;\r\n\r\n}));\r\n","import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","// PURPOSE FOR THIS FILE:\n// this file contain common js code between different user types.\nimport format from 'date-fns/format'\n// https://www.npmjs.com/package/chartist-plugin-tooltips-updated\nexport default {\n  watch: {\n    selectedMerchants (newSelectedMerchants) {\n      this.merchantFilterSubText = this.updateFilterSubText('Merchant', newSelectedMerchants, this.cscMerchants)\n      const selectedMerchantsData = []\n      this.cscMerchants.forEach((merchant) => {\n        if (newSelectedMerchants.includes(merchant.id)) {\n          selectedMerchantsData.push(merchant)\n        }\n      })\n      // when none merchant is selected, fetch all merchant specialities\n      // else fetch only selected merchant sepcialities.\n      if (selectedMerchantsData.length === 0) {\n        // on no merchant select, mapped speciality filter are reset (to avoid confusion).\n        // keep this in promise.\n        new Promise((resolve, reject) => {\n          this.resetSpecialities()\n          resolve('')\n        }).then(response => {\n          this.getMappedSpecialitiesFromMerchants(this.cscMerchants)\n        })\n      } else {\n        this.getMappedSpecialitiesFromMerchants(selectedMerchantsData)\n      }\n    },\n    selectedSpecialities (newselectedSpecialities) {\n      this.specialityFilterSubText = this.updateFilterSubText('Speciality', newselectedSpecialities, this.specialities)\n    },\n  },\n  created () {\n    // TODO: single request API to fetch required data on page load.\n    this.getConsultationStats()\n    this.getCscMerchants()\n    this.updateDatePickerFields()\n    this.getDoctorAvailableStats()\n  },\n  methods: {\n    getConsultationStats: function () {\n      this.$http.post('/dashboard_consultations/stats', {\n        consultation_filters: {\n          merchant_ids: this.selectedMerchants,\n          mapped_speciality_ids: this.selectedSpecialities,\n          date_from: this.datePicker.dateOne,\n          date_to: this.datePicker.dateTwo,\n        },\n      }).then((response) => {\n        const consultationStats = response\n        const callDurationStats = consultationStats.call_duration_stats\n        this.consultationStats.stats = consultationStats.consultation_stats ? consultationStats.consultation_stats : {}\n        // handling consultation stats chart\n        if (consultationStats.groupped_by_day) {\n          this.handleChartData('consultationStats', 'daily', consultationStats.groupped_by_day)\n        }\n        if (consultationStats.groupped_by_month) {\n          this.handleChartData('consultationStats', 'monthly', consultationStats.groupped_by_month)\n        }\n        // handling call duration stats\n        this.callDurationStats.minCallDuration = callDurationStats.min_call_duration\n        this.callDurationStats.avgCallDuration = callDurationStats.avg_call_duration\n        this.callDurationStats.maxCallDuration = callDurationStats.max_call_duration\n        this.callDurationStats.totalCallDuration = callDurationStats.total_call_duration\n        this.callDurationStats.totalVideoConsultations = callDurationStats.total_video_consultations\n        if (callDurationStats.groupped_by_day) {\n          this.handleChartData('callDurationStats', 'daily', callDurationStats.groupped_by_day)\n        }\n        if (callDurationStats.groupped_by_month) {\n          this.handleChartData('callDurationStats', 'monthly', callDurationStats.groupped_by_month)\n        }\n      }).catch((error) => {\n        // handle error\n        console.log(error)\n      })\n    },\n    resetSpecialities: function () {\n      this.specialities = []\n      this.specialityFilterValue = 0\n      this.selectedSpecialities = []\n      this.specialityFilterSubText = 'All Specialities'\n    },\n    getMappedSpecialitiesFromMerchants: function (merchantResponse) {\n      if (merchantResponse.length > 0) {\n        const allMappedSpecialities = []\n        const allMappedSpecialitiesIds = []\n        merchantResponse.forEach((merchant) => {\n          const mappedSpecialities = merchant.mapped_specialities\n          if (mappedSpecialities.length > 0) {\n            mappedSpecialities.forEach((mappedSpeciality) => {\n              const mappedSpecialityId = mappedSpeciality.id\n              if (!allMappedSpecialitiesIds.includes(mappedSpecialityId)) {\n                allMappedSpecialitiesIds.push(mappedSpecialityId)\n                allMappedSpecialities.push({ id: mappedSpecialityId, name: mappedSpeciality.name })\n              }\n            })\n          }\n        })\n        if (allMappedSpecialitiesIds.length === 0) {\n          this.resetSpecialities()\n        } else {\n          this.setSpecialities(allMappedSpecialities, allMappedSpecialitiesIds)\n        }\n      } else {\n        this.resetSpecialities()\n      }\n    },\n    setSpecialities: function (mappedSpecialities, mappedSpecialitiesIds) {\n      const newselectedSpecialities = []\n      this.specialities = mappedSpecialities\n      this.specialityFilterValue = this.specialities.length\n      this.selectedSpecialities.forEach((selectedSpecialityId) => {\n        if (mappedSpecialitiesIds.includes(selectedSpecialityId)) {\n          newselectedSpecialities.push(selectedSpecialityId)\n        }\n      })\n      this.selectedSpecialities = newselectedSpecialities\n      this.specialityFilterSubText = this.updateFilterSubText('Speciality', this.selectedSpecialities, this.specialities)\n    },\n    getCscMerchants: function () {\n      this.$http.get('/dashboard_csc_merchants/index').then((response) => {\n        this.cscMerchants = response\n        this.merchantFilterValue = this.cscMerchants.length\n        this.getMappedSpecialitiesFromMerchants(response)\n      }).catch((error) => {\n        // handle error\n        console.log(error)\n      })\n    },\n    updateFilterSubText: function (operationOn, newSelectedFilters, filterDataItems) {\n      let filterSubtext = ''\n      if (newSelectedFilters.length > 0) {\n        const selectedFilterNames = []\n        newSelectedFilters.forEach((selectedFilterId, index) => {\n          filterDataItems.forEach((item, index) => {\n            if (item.id === selectedFilterId) {\n              selectedFilterNames.push(item.name)\n            }\n          })\n        })\n        filterSubtext = selectedFilterNames.join(', ')\n      } else {\n        switch (operationOn) {\n          case 'Merchant':\n            filterSubtext = 'All Merchants'\n            break\n          case 'Speciality':\n            filterSubtext = 'All Specialities'\n            break\n          default:\n            filterSubtext = 'All'\n            break\n        }\n      }\n      filterSubtext = this.getUpdatedFilterSubText(filterSubtext)\n      return filterSubtext\n    },\n    closeFilterListDialog: function (filterName) {\n      if (filterName === this.merchantFilterTitle) {\n        this.merchantListDialog = false\n        this.getDoctorAvailableStats()\n      } else if (filterName === this.specialityFilterTitle) {\n        this.specialitiesListDialog = false\n        this.getDoctorAvailableStats()\n      } else if (filterName === this.statesFilterTitle) {\n        this.stateListDialog = false\n      } else if (filterName === this.districtsFilterTitle) {\n        this.districtListDialog = false\n      }\n      this.getConsultationStats()\n    },\n    formatDates (datePicker) {\n      // on change of dates, required data is also filtered.\n      let formattedDates = ''\n      this.datePicker = datePicker\n      if (datePicker.dateOne) {\n        formattedDates = format(datePicker.dateOne, this.datePicker.dateFormat)\n      }\n      if (datePicker.dateTwo) {\n        formattedDates += ' - ' + format(datePicker.dateTwo, this.datePicker.dateFormat)\n      }\n      // this.datePicker.subText += '(' + formattedDates + ')'\n      this.datePicker.subText = formattedDates\n      this.getConsultationStats()\n    },\n    resetDates () {\n      this.datePicker.dateOne = ''\n      this.datePicker.dateTwo = ''\n      this.datePicker.subText = ''\n      this.getConsultationStats()\n    },\n    updateDatePickerFields () {\n      const d = new Date()\n      const date = d.getDate()\n      const month = d.getMonth()\n      const year = d.getFullYear()\n      // date format ('2021-02-20')\n      // using a day before today\n      this.datePicker.endDate = year + '-' + (month + 1) + '-' + (date - 1)\n    },\n    getDoctorAvailableStats: function () {\n      this.$http.post('/doctor_profiles/stats', {\n        doctor_profile_filters: {\n          merchant_ids: this.selectedMerchants,\n          mapped_speciality_ids: this.selectedSpecialities,\n        },\n      }).then((response) => {\n        this.handleDoctorAvailableStatsResponse(response)\n      }).catch((error) => {\n        // handle error\n        console.log(error)\n      })\n    },\n    handleDoctorAvailableStatsResponse: function (response) {\n      if (response.approved_doctor_profiles) {\n        this.doctorStats.approvedCount = response.approved_doctor_profiles.count\n      }\n      if (response.groupped_by_week) {\n        this.handleChartData('doctorStats', 'weekly', response.groupped_by_week)\n      }\n      if (response.groupped_by_month) {\n        this.handleChartData('doctorStats', 'monthly', response.groupped_by_month)\n      }\n    },\n    fetchChartData: function (chartData) {\n      const chartDataLabels = Object.keys(chartData)\n      const chartDataSeries = [Object.values(chartData)]\n      let chartDataOptionHigh = 0\n      chartDataOptionHigh = (Math.max(...chartDataSeries[0]) + Math.max(...chartDataSeries[0]) / 4)\n      if (chartDataOptionHigh === 0) {\n        chartDataOptionHigh = 100\n      }\n      return [chartDataLabels, chartDataSeries, chartDataOptionHigh]\n    },\n    handleChartData: function (whoseStats, grouppingInterval, grouppedData) {\n      const specifiedIntervalData = this.fetchChartData(grouppedData)\n      if (whoseStats === 'doctorStats') {\n        if (grouppingInterval === 'weekly') {\n          this.doctorStats.grouppedByWeek.data.labels = specifiedIntervalData[0]\n          this.doctorStats.grouppedByWeek.data.series = specifiedIntervalData[1]\n          this.doctorStats.grouppedByWeek.options.high = specifiedIntervalData[2]\n        } else if (grouppingInterval === 'monthly') {\n          this.doctorStats.grouppedByMonth.data.labels = specifiedIntervalData[0]\n          this.doctorStats.grouppedByMonth.data.series = specifiedIntervalData[1]\n          this.doctorStats.grouppedByMonth.options.high = specifiedIntervalData[2]\n        }\n      } else if (whoseStats === 'consultationStats') {\n        if (grouppingInterval === 'daily') {\n          this.consultationStats.grouppedByDay.data.labels = specifiedIntervalData[0]\n          this.consultationStats.grouppedByDay.data.series = specifiedIntervalData[1]\n          this.consultationStats.grouppedByDay.options.high = specifiedIntervalData[2]\n        } else if (grouppingInterval === 'monthly') {\n          this.consultationStats.grouppedByMonth.data.labels = specifiedIntervalData[0]\n          this.consultationStats.grouppedByMonth.data.series = specifiedIntervalData[1]\n          this.consultationStats.grouppedByMonth.options.high = specifiedIntervalData[2]\n        }\n      } else if (whoseStats === 'callDurationStats') {\n        if (grouppingInterval === 'daily') {\n          this.callDurationStats.grouppedByDay.data.labels = specifiedIntervalData[0]\n          this.callDurationStats.grouppedByDay.data.series = specifiedIntervalData[1]\n          this.callDurationStats.grouppedByDay.options.high = specifiedIntervalData[2]\n        } else if (grouppingInterval === 'monthly') {\n          this.callDurationStats.grouppedByMonth.data.labels = specifiedIntervalData[0]\n          this.callDurationStats.grouppedByMonth.data.series = specifiedIntervalData[1]\n          this.callDurationStats.grouppedByMonth.options.high = specifiedIntervalData[2]\n        }\n      }\n    },\n    getSubStats: function (whoseStats) {\n      let subStats = {}\n      if (whoseStats === 'consultation') {\n        if (this.consultationStats.stats) {\n          subStats = [\n            {\n              title: 'success',\n              count: this.consultationStats.stats.successful_count,\n              color: '#28a745',\n              icon: ['fas', 'arrow-up'],\n            },\n            {\n              title: 'failed',\n              count: this.consultationStats.stats.unsuccessful_count,\n              color: '#dc3545',\n              icon: ['fas', 'arrow-down'],\n            },\n          ]\n        }\n      } else if (whoseStats === 'call_duration') {\n        if (this.callDurationStats) {\n          subStats = [\n            {\n              title: 'average',\n              count: this.callDurationStats.avgCallDuration,\n              color: '#17a2b8',\n            },\n            {\n              title: 'count',\n              count: this.callDurationStats.totalVideoConsultations,\n              color: '#17a2b8',\n            },\n          ]\n        }\n      }\n      return subStats\n    },\n    getStatsCardIconBgColor: function (section) {\n      let color\n      switch (section) {\n        case 'filter':\n          color = '#004a91'\n          break\n        case 'stats':\n          color = '#368f8b'\n          break\n        case 'graph':\n          color = 'lightOrange'\n          break\n      }\n      return color\n    },\n    getUpdatedFilterSubText: function (selectedFilters) {\n      const chosenFilters = selectedFilters.split(',')\n      let filterSubtext\n      if (chosenFilters.length >= 3) {\n        filterSubtext = chosenFilters[0] + ', ' + chosenFilters[1] + ' + ' + `${chosenFilters.length - 2}` + 'more'\n      } else {\n        filterSubtext = selectedFilters\n      }\n      return filterSubtext\n    },\n  },\n}\n"],"sourceRoot":""}